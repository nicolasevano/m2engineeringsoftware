<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:osgi="http://www.springframework.org/schema/osgi" xmlns:cxf="http://camel.apache.org/schema/cxf"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
       http://camel.apache.org/schema/cxf  http://camel.apache.org/schema/cxf/camel-cxf.xsd"
       >
    <import resource="classpath:META-INF/cxf/cxf.xml" />
	
	<bean id="helloBean" class="com.sodifrance.stage.esb.servicemix.HelloBean">
		<property name="say" value="Hi from Camel" />
	</bean>
	
	<bean id="aggregatorStrategy" class="com.sodifrance.stage.esb.servicemix.AgregateStrategy"/>
	
	<!-- added to try another way to design cxf service -->
	
	<cxf:cxfEndpoint id="articleService"
		address="http://localhost:8085/articleService"
		serviceName="article:ArticleWSImplService"
		serviceClass="com.sodifrance.stage.esb.servicemix.ArticleWS" 
		wsdlURL="service.wsdl"
		xmlns:article="http://servicemix.esb.stage.sodifrance.com/">		
		<cxf:properties>
         	<!--  enable mtom by setting this property to true -->
         	<entry key="mtom-enabled" value="true"/>         
         	<!--  set the camel-cxf endpoint data fromat to PAYLOAD mode -->
         	<entry key="dataFormat" value="PAYLOAD"/>
     	</cxf:properties> 
	</cxf:cxfEndpoint>
	
	<camelContext xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder id="ficConf" location="classpath:com.sodifrance.stage.esb.servicemix.cfg"/>
		<!-- frist endpoint camel cxf design can be wrong -->
		<camel:endpoint id="camelRouter"
			uri="cxf:bean:articleService?dataFormat=PAYLOAD" />
				
		<camel:route id="transformer">
			<camel:from ref="camelRouter" />
			<camel:multicast strategyRef="aggregatorStrategy" parallelProcessing="true">
				<camel:to uri="direct:transformerCD" />
				<camel:to uri="direct:transformerBook" />
			</camel:multicast>
			<camel:to uri="properties:{{query.merge}}"/>
			<log message="The referential contains ${in.body}" />
		</camel:route>

		<camel:route id="cd">
			<camel:from uri="direct:transformerCD" />
			<transform>
				<simple>${properties:payload.cd}</simple>
			</transform>
    		<setHeader headerName="operationname">
                <simple>getAllCD</simple>
            </setHeader>
            <setHeader headerName="operationnamespace">
                <simple>${properties:namespace.cd}</simple>
            </setHeader>
			<log message="try to get all cd" />
			<camel:convertBodyTo type="java.lang.String" />
			<camel:to uri="properties:{{http.address.cd}}"/>
			<camel:to uri="properties:{{query.cd}}"/>
		</camel:route>
		
		<camel:route id="book">
			<camel:from uri="direct:transformerBook" />
			<transform>
			<simple>${properties:payload.book}</simple>
			</transform>
			<setHeader headerName="operationname">
                <simple>getAllBook</simple>
            </setHeader>
            <setHeader headerName="operationnamespace">
                <simple>${properties:namespace.book}</simple>
            </setHeader>
			<log message="Try to get all book" />
			<camel:to uri="properties:{{http.address.book}}"/>
			<camel:to uri="properties:{{query.book}}"/>
		</camel:route>
		
		<route id="timerHello">
			<from uri="timer:foo?period=5000" />
			<setBody>
				<method ref="helloBean" method="hello" />
			</setBody>
			<log message="The message contains ${body}" />
		</route>
		
<!-- 		<route id="timerArticle"> -->
<!-- 			<from uri="timer:article?period=5000" /> -->
<!-- 			<setBody> -->
<!-- 				<method ref="articleBean" method="getAllArticle" /> -->
<!-- 			</setBody> -->
<!-- 			<to uri="cxf:camel://direct:articleService" />			 -->
<!-- 			<log message="article list ${body}" /> -->
<!-- 		</route> -->
		
	</camelContext>
	
</beans>
